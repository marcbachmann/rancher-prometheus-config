{{- define "normkey" -}}
  {{- $last_part := index (split . "/") 4 -}}
  {{- $removed_dots := replace $last_part "." "_" -1 -}}
  {{- replace $removed_dots "-" "_" -1 -}}
{{- end -}}

{{- define "promlabel" -}}
  {{- $label := .Key -}}
  {{- $value := .Value -}}
  {{- $len := split $label "prometheus.label." -}}
  {{- if eq (len $len) 2 -}}
  {{- $removed_prefix := replace $label "prometheus.label." "" -1 -}}
  {{ template "normkey" $removed_prefix }}: '{{ $value }}'
  {{- end -}}
{{- end -}}

global:
  scrape_interval: 10s
  scrape_timeout: 10s
  evaluation_interval: 1m
  external_labels:
    cluster: '{{getenv "PROMETHEUS_FEDERATION_CLUSTER" (getv "/name" "default")}}'

scrape_configs:
  {{- range $stack_name := ls "/stacks/" -}}
    {{- range $service := ls (printf "/stacks/%s/services/" $stack_name) -}}
      {{ if exists (printf "/stacks/%s/services/%s/labels/prometheus.port" $stack_name $service) -}}
        {{- $port := getv (printf "/stacks/%s/services/%s/labels/prometheus.port" $stack_name $service) }}

  {{- if exists (printf "/stacks/%s/services/%s/labels/prometheus.job_name" $stack_name $service) }}
  - job_name: '{{ getv (printf "/stacks/%s/services/%s/labels/prometheus.job_name" $stack_name $service) }}'
  {{- else }}
  - job_name: '{{ $stack_name }}_{{ $service }}'
  {{- end }}

    {{- if exists (printf "/stacks/%s/services/%s/labels/prometheus.scrape_interval" $stack_name $service) }}
    scrape_interval: '{{ getv (printf "/stacks/%s/services/%s/labels/prometheus.scrape_interval" $stack_name $service) }}'
    {{- end }}

    {{- if exists (printf "/stacks/%s/services/%s/labels/prometheus.scrape_timeout" $stack_name $service) }}
    scrape_timeout: '{{ getv (printf "/stacks/%s/services/%s/labels/prometheus.scrape_timeout" $stack_name $service) }}'
    {{- end }}

    {{- if exists (printf "/stacks/%s/services/%s/labels/prometheus.metrics_path" $stack_name $service) }}
    metrics_path: '{{ getv (printf "/stacks/%s/services/%s/labels/prometheus.metrics_path" $stack_name $service) }}'
    {{- end }}

    static_configs:
      {{- if eq "service" (getv (printf "/stacks/%s/services/%s/kind" $stack_name $service)) -}}
        {{- range $container := lsdir (printf "/stacks/%s/services/%s/containers/" $stack_name $service) }}

      - targets: ['{{ $container }}.rancher.internal:{{ $port }}']
        labels:
          {{- $host_uuid := getv (printf "/containers/%s/host_uuid" $container) -}}
          {{- range $host_name := ls "/hosts/" -}}
            {{- if eq $host_uuid (getv ( printf "/hosts/%s/uuid" . )) }}
          instance: '{{ $host_name }}'
          __host_ip: '{{ getv (printf "/hosts/%s/agent_ip" $host_name) }}'
              {{- range gets (printf "/hosts/%s/labels/*" $host_name) }}
          __host_label_{{ template "normkey" .Key }}: '{{ .Value }}'
              {{- end -}}
            {{- end -}}
          {{- end -}}
          {{- range gets (printf "/stacks/%s/services/%s/labels/*" $stack_name $service) }}
          {{ template "promlabel" . }}
          {{- end -}}
          __stack_name: '{{ $stack_name }}'
          __service_name: '{{ $service }}'
          __container_name: '{{ $container }}'
          __container_id: '{{ getv (printf "/containers/%s/external_id" $container) }}'

        {{- end -}}
      {{- end -}}

      {{- if eq "service" (getv (printf "/stacks/%s/services/%s/kind" $stack_name $service)) -}}
        {{- if not (exists (printf "/stacks/%s/services/%s/labels/prometheus.metric_relabel_pattern" $stack_name $service)) }}
    relabel_configs:
      - action: 'replace'
        source_labels: ['__container_id']
        target_label: 'container_id'

      - action: 'replace'
        source_labels: ['__container_name']
        target_label: 'container_name'

      - action: 'replace'
        source_labels: ['__stack_name']
        target_label: 'stack_name'

      - action: 'replace'
        source_labels: ['__service_name']
        target_label: 'service_name'

        {{- else -}}
          {{- if eq "cadvisor" (getv (printf "/stacks/%s/services/%s/labels/prometheus.metric_relabel_pattern" $stack_name $service)) }}

    metric_relabel_configs:
      - action: 'replace'
        source_labels: ['container_label_io_rancher_project_name']
        target_label: 'stack_name'

      - action: 'replace'
        source_labels: ['container_label_io_rancher_stack_service_name']
        regex: '[a-zA-Z0-9_-]*/([a-zA-Z0-9_-]*)'
        target_label: 'service_name'

      - action: 'replace'
        source_labels: ['id']
        regex: '/docker/(.+)'
        target_label: 'container_id'

      - action: 'replace'
        source_labels: ['container_label_io_rancher_container_system']
        target_label: 'system'

      - action: 'labelmap'
        regex: 'container_label_prometheus_label_(.+)'

      - action: 'replace'
        source_labels: ['image']
        target_label: 'image_name'

      - action: 'replace'
        source_labels: ['name']
        target_label: 'container_name'

      - action: 'labeldrop'
        regex: '(id|image|name|container_label_.*)'



          {{- else if eq "node" (getv (printf "/stacks/%s/services/%s/labels/prometheus.metric_relabel_pattern" $stack_name $service)) }}

    relabel_configs:
      - action: 'labelmap'
        regex: '__host_label_(.+)'

      - action: 'labeldrop'
        regex: 'io_rancher_.*'

          {{- else if eq "rancher" (getv (printf "/stacks/%s/services/%s/labels/prometheus.metric_relabel_pattern" $stack_name $service)) }}

    metric_relabel_configs:
      - action: 'replace'
        source_labels: ['__name__', 'name']
        regex: 'rancher_stack_health_status;(.+)'
        target_label: 'stack_name'

      - action: 'replace'
        source_labels: ['__name__', 'name']
        regex: '(rancher_service_health_status|rancher_service_scale|rancher_service_state);(.+)'
        replacement: '$2'
        target_label: 'service_name'

      - action: 'replace'
        source_labels: ['__name__', 'exported_stack_name']
        regex: '(rancher_service_health_status|rancher_service_scale|rancher_service_state);(.+)'
        replacement: '$2'
        target_label: 'stack_name'

      - action: 'replace'
        source_labels: ['__name__']
        regex: 'rancher_service_[a-z_]*'
        replacement: ''
        target_label: 'exported_stack_name'

      - action: 'replace'
        source_labels: ['__name__']
        regex: '(rancher_stack_health_status|rancher_service_health_status|rancher_service_scale|rancher_service_state)'
        replacement: ''
        target_label: 'name'

          {{- end -}}

        {{- end -}}
      {{- end -}}


      {{- end -}}
    {{- end -}}
  {{- end }}
