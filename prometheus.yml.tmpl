{{- define "normalize" -}}
  {{- $raw_label := .Key -}}
  {{- $normalize_slash := index (split $raw_label "/") 4 -}}
  {{- $normalize_dots := replace $normalize_slash "." "_" -1 -}}
  {{- $normalize_hyphen := replace $normalize_dots "-" "_" -1 -}}
  {{- $normalized_label := $normalize_hyphen -}}
  {{ $normalized_label }}: '{{ .Value }}'
{{- end -}}

global:
  scrape_interval: 10s
  scrape_timeout: 10s
  evaluation_interval: 1m

scrape_configs:
  {{- range $stack_name := ls "/stacks/" -}}
    {{- range $service := ls (printf "/stacks/%s/services/" $stack_name) -}}
      {{ if exists (printf "/stacks/%s/services/%s/labels/prometheus.port" $stack_name $service) -}}
        {{- $port := getv (printf "/stacks/%s/services/%s/labels/prometheus.port" $stack_name $service) }}

  {{- if exists (printf "/stacks/%s/services/%s/labels/prometheus.scrape_interval" $stack_name $service) }}
  - job_name: '{{ getv (printf "/stacks/%s/services/%s/labels/prometheus.job_name" $stack_name $service) }}'
  {{- else }}
  - job_name: '{{ $stack_name }}_{{ $service }}'
  {{- end }}

    {{- if exists (printf "/stacks/%s/services/%s/labels/prometheus.scrape_interval" $stack_name $service) }}
    scrape_interval: '{{ getv (printf "/stacks/%s/services/%s/labels/prometheus.scrape_interval" $stack_name $service) }}'
    {{- end }}

    {{- if exists (printf "/stacks/%s/services/%s/labels/prometheus.scrape_timeout" $stack_name $service) }}
    scrape_timeout: '{{ getv (printf "/stacks/%s/services/%s/labels/prometheus.scrape_timeout" $stack_name $service) }}'
    {{- end }}

    {{- if exists (printf "/stacks/%s/services/%s/labels/prometheus.metrics_path" $stack_name $service) }}
    metrics_path: '{{ getv (printf "/stacks/%s/services/%s/labels/prometheus.metrics_path" $stack_name $service) }}'
    {{- end }}

    static_configs:
    {{- if eq "service" (getv (printf "/stacks/%s/services/%s/kind" $stack_name $service)) }}
      {{- range $container := lsdir (printf "/stacks/%s/services/%s/containers/" $stack_name $service) -}}
        {{- $host_uuid := getv (printf "/containers/%s/host_uuid" $container) }}

    - targets:
      - '{{ $container }}.rancher.internal:{{ $port }}'
        {{- if eq "cadvisor" (getv (printf "/stacks/%s/services/%s/labels/prometheus.metric_relabel_pattern" $stack_name $service)) }}
      metric_relabel_configs:
      - source_labels: ['container_label_io_rancher_project_service_name']
        regex: '^(.+)/'
        target_label: 'stack_name'
        replacement: '$1'

      - source_labels: ['container_label_io_rancher_project_service_name']
        regex: '/(.+)$'
        target_label: 'service_name'
        replacement: '$1'

      - source_labels: ['container_label_io_rancher_project_service_name']
        regex: '/(.+)$'
        target_label: 'container_id'
        replacement: '$1'
        {{- else }}
      labels:
        stack_name: '{{ $stack_name }}'
        service_name: '{{ $service }}'
        container_id: '{{ getv (printf "/containers/%s/external_id" $container) }}'
        {{- end }}
      {{- end }}
    {{- end }}


        {{- end -}}
    {{- end }}
  {{- end }}
